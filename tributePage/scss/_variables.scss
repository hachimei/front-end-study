//Grid containers
// Define the maximum of '.container' for different screen sizes.

//Grid columns
//Set the numberf of columns and specify the width of the gutters
$grid-gutter-width:30px !default;

// Options
//
// Quickly modify global styling by enabling or disabling optional features.
$enable-grid-classes: true !default;
$enable-flex:false !default;

// Table of Contents
//
// Colors
// Options
// Spacing
// Body
// Links
// Grid breakpoints
// Grid containers
// Grid columns
// Fonts
// Components

@mixin _assert-ascending($map, $map-name) {
    $prev-key: null;
    $prev-num: null;
    @each $key, $num in $map {
      @if $prev-num == null {
        // Do nothing
      } @else if not comparable($prev-num, $num) {
        @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
      } @else if $prev-num >= $num {
        @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
      }
      $prev-key: $key;
      $prev-num: $num;
    }
  }

//Grid containers
//
//Define the maximum width of `.container` for different screen sizes,

$container-max-widths:(
    sm:576px,
    md:720px,
    lg:940px,
    xl:1140px
 ) !default;
@include _assert-ascending($container-max-widths,"$container-max-widths");

//Grid breakpoints
//
// Define the minimum dimensions at which your layout will change,
// adapting to different screen sizes, for use in media queries

$grid-breakpoints: (
    xs: 0,
    sm: 544px,
    md: 768px,
    lg: 992px,
    xl: 1200px
  ) !default;
@include _assert-ascending($grid-breakpoints,"$grid-breakpoints");
  
