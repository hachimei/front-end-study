//Grid stytem
//
// Generate semantic grid columns with these mixins
@mixin make-container() {
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    padding-left: ($grid-gutter-width / 2);
    padding-right: ($grid-gutter-width / 2);
}

// For each breakpoint, define the maximum width of the container in a media query
@mixin make-container-max-widths($max-widths:$container-max-widths, $breakpoints:$grid-breakpoints) {
    @each $breakpoint,
    $container-max-width in $max-widths {
        @include media-breakpoint-up($breakpoint, $breakpoints) {
            max-width: $container-max-width;
        }
    }
} // Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($name, $breakpoints);
    @if $min {
        @media (min-width: $min) {
            @content;
        }
    }
    @else {
        @content;
    }
}

@mixin make-row() {
    display: flex;
    flex-wrap: wrap;
    margin-right: ($grid-gutter-width/-2);
    margin-left: ($grid-gutter-width/-2)
}

@mixin 

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    576px
@function breakpoint-min($name, $breakpoints:$grid-breakpoints) {
    $min: map-get($breakpoints, $name);
    @return if($min !=0, $min, null)
}